/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.1 		*/
/*  Created On : 10-Aug-2017 4:11:29 PM 				*/
/*  DBMS       : SQL Server 2008 						*/
/* ---------------------------------------------------- */

/* Drop Foreign Key Constraints */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Achievement_Employee]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Achievement] DROP CONSTRAINT [FK_Achievement_Employee]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_ActiveTraining_ClassRoom]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [ActiveTraining] DROP CONSTRAINT [FK_ActiveTraining_ClassRoom]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_ActiveTraining_Employee]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [ActiveTraining] DROP CONSTRAINT [FK_ActiveTraining_Employee]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_ActiveTraining_Employee_02]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [ActiveTraining] DROP CONSTRAINT [FK_ActiveTraining_Employee_02]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_ActiveTraining_Employee_03]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [ActiveTraining] DROP CONSTRAINT [FK_ActiveTraining_Employee_03]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_ActiveTraining_Employee_04]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [ActiveTraining] DROP CONSTRAINT [FK_ActiveTraining_Employee_04]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Elligible_ActiveTraining]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Elligible] DROP CONSTRAINT [FK_Elligible_ActiveTraining]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Elligible_Employee]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Elligible] DROP CONSTRAINT [FK_Elligible_Employee]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Enrollment_ActiveTraining]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Enrollment] DROP CONSTRAINT [FK_Enrollment_ActiveTraining]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Enrollment_Employee_02]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Enrollment] DROP CONSTRAINT [FK_Enrollment_Employee_02]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Enrollment_Period_02]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Enrollment] DROP CONSTRAINT [FK_Enrollment_Period_02]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_UserRole_Employee]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [UserRole] DROP CONSTRAINT [FK_UserRole_Employee]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_UserRole_Role]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [UserRole] DROP CONSTRAINT [FK_UserRole_Role]
GO

/* Drop Tables */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Achievement]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Achievement]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[ActiveTraining]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [ActiveTraining]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[ClassRoom]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [ClassRoom]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Elligible]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Elligible]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Employee]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Employee]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Enrollment]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Enrollment]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Period]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Period]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Role]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Role]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[UserRole]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [UserRole]
GO

/* Create Tables */

CREATE TABLE [Achievement]
(
	[AchievemetID] int NOT NULL IDENTITY (1, 1),
	[EmployeeID] int NULL,
	[Begining] varchar(50) NULL,
	[LI1] varchar(50) NULL,
	[LI2] varchar(50) NULL,
	[Int1] varchar(50) NULL,
	[Int2] varchar(50) NULL,
	[BW1] varchar(50) NULL,
	[CE1] varchar(50) NULL,
	[BW2] varchar(50) NULL,
	[CE2] varchar(50) NULL,
	[PresentationSkills2] varchar(50) NULL
)
GO

CREATE TABLE [ActiveTraining]
(
	[TriningID] int NOT NULL IDENTITY (1, 1),
	[TrainerID] int NOT NULL,
	[BackupTrainerID] int NULL,
	[StartDate] datetime NOT NULL,
	[EndDate] datetime NOT NULL,
	[ClassID] int NULL,
	[CeratedBy] int NOT NULL,
	[CreatedAt] datetime NULL,
	[ModifiedBy] int NULL,
	[MadifiedAt] datetime NULL
)
GO

CREATE TABLE [ClassRoom]
(
	[ClassID] int NOT NULL IDENTITY (1, 1),
	[NameRoom] varchar(50) NULL,
	[Location] varchar(50) NULL
)
GO

CREATE TABLE [Elligible]
(
	[EmployeeID] int NOT NULL,
	[TrainingID] int NOT NULL,
	[EligibleStatus] int NULL
)
GO

CREATE TABLE [Employee]
(
	[EmployeeID] int NOT NULL IDENTITY (1, 1),
	[EmpployeeName] varchar(70) NOT NULL,
	[email] varchar(50) NOT NULL,
	[Job] varchar(50) NOT NULL,
	[Grade] varchar(50) NOT NULL,
	[Account] varchar(50) NOT NULL,
	[ActiveStatus] varchar(50) NOT NULL
)
GO

CREATE TABLE [Enrollment]
(
	[EmployeeID] int NOT NULL,
	[PeriodID] int NOT NULL,
	[CourseID] int NOT NULL,
	[Status] varchar(50) NULL
)
GO

CREATE TABLE [Period]
(
	[PeriodID] int NOT NULL IDENTITY (1, 1),
	[NamePeriod] varchar(50) NULL,
	[StartDate] datetime NULL,
	[EndDate] datetime NULL,
	[EnrollmentOpen] int NULL
)
GO

CREATE TABLE [Role]
(
	[RoleID] int NOT NULL IDENTITY (1, 1),
	[RoleName] varchar(50) NULL
)
GO

CREATE TABLE [UserRole]
(
	[EmployeeID] int NOT NULL,
	[RoleID] int NOT NULL
)
GO

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [Achievement] 
 ADD CONSTRAINT [PK_Table1]
	PRIMARY KEY CLUSTERED ([AchievemetID] ASC)
GO

ALTER TABLE [Achievement] 
 ADD CONSTRAINT [MustUnique] UNIQUE NONCLUSTERED ([EmployeeID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Achievement_Employee] 
 ON [Achievement] ([EmployeeID] ASC)
GO

ALTER TABLE [ActiveTraining] 
 ADD CONSTRAINT [PK_ActiveTraining]
	PRIMARY KEY CLUSTERED ([TriningID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_ActiveTraining_ClassRoom] 
 ON [ActiveTraining] ([ClassID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_ActiveTraining_Employee] 
 ON [ActiveTraining] ([TrainerID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_ActiveTraining_Employee_02] 
 ON [ActiveTraining] ([BackupTrainerID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_ActiveTraining_Employee_03] 
 ON [ActiveTraining] ([CeratedBy] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_ActiveTraining_Employee_04] 
 ON [ActiveTraining] ([ModifiedBy] ASC)
GO

ALTER TABLE [ClassRoom] 
 ADD CONSTRAINT [PK_ClassRoom]
	PRIMARY KEY CLUSTERED ([ClassID] ASC)
GO

ALTER TABLE [Elligible] 
 ADD CONSTRAINT [PK_Elligible]
	PRIMARY KEY CLUSTERED ([EmployeeID] ASC,[TrainingID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Elligible_ActiveTraining] 
 ON [Elligible] ([TrainingID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Elligible_Employee] 
 ON [Elligible] ([EmployeeID] ASC)
GO

ALTER TABLE [Employee] 
 ADD CONSTRAINT [PK_Employee]
	PRIMARY KEY CLUSTERED ([EmployeeID] ASC)
GO

ALTER TABLE [Enrollment] 
 ADD CONSTRAINT [PK_Enrollment]
	PRIMARY KEY CLUSTERED ([EmployeeID] ASC,[PeriodID] ASC,[CourseID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Enrollment_ActiveTraining] 
 ON [Enrollment] ([CourseID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Enrollment_Employee] 
 ON [Enrollment] ([EmployeeID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Enrollment_Employee_02] 
 ON [Enrollment] ([EmployeeID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Enrollment_Period] 
 ON [Enrollment] ([PeriodID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Enrollment_Period_02] 
 ON [Enrollment] ([PeriodID] ASC)
GO

ALTER TABLE [Period] 
 ADD CONSTRAINT [PK_Period]
	PRIMARY KEY CLUSTERED ([PeriodID] ASC)
GO

ALTER TABLE [Role] 
 ADD CONSTRAINT [PK_Role]
	PRIMARY KEY CLUSTERED ([RoleID] ASC)
GO

ALTER TABLE [UserRole] 
 ADD CONSTRAINT [PK_UserRole]
	PRIMARY KEY CLUSTERED ([EmployeeID] ASC,[RoleID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_UserRole_Employee] 
 ON [UserRole] ([EmployeeID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_UserRole_Role] 
 ON [UserRole] ([RoleID] ASC)
GO

/* Create Foreign Key Constraints */

ALTER TABLE [Achievement] ADD CONSTRAINT [FK_Achievement_Employee]
	FOREIGN KEY ([EmployeeID]) REFERENCES [Employee] ([EmployeeID]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [ActiveTraining] ADD CONSTRAINT [FK_ActiveTraining_ClassRoom]
	FOREIGN KEY ([ClassID]) REFERENCES [ClassRoom] ([ClassID]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [ActiveTraining] ADD CONSTRAINT [FK_ActiveTraining_Employee]
	FOREIGN KEY ([TrainerID]) REFERENCES [Employee] ([EmployeeID]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [ActiveTraining] ADD CONSTRAINT [FK_ActiveTraining_Employee_02]
	FOREIGN KEY ([BackupTrainerID]) REFERENCES [Employee] ([EmployeeID]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [ActiveTraining] ADD CONSTRAINT [FK_ActiveTraining_Employee_03]
	FOREIGN KEY ([CeratedBy]) REFERENCES [Employee] ([EmployeeID]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [ActiveTraining] ADD CONSTRAINT [FK_ActiveTraining_Employee_04]
	FOREIGN KEY ([ModifiedBy]) REFERENCES [Employee] ([EmployeeID]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Elligible] ADD CONSTRAINT [FK_Elligible_ActiveTraining]
	FOREIGN KEY ([TrainingID]) REFERENCES [ActiveTraining] ([TriningID]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Elligible] ADD CONSTRAINT [FK_Elligible_Employee]
	FOREIGN KEY ([EmployeeID]) REFERENCES [Employee] ([EmployeeID]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Enrollment] ADD CONSTRAINT [FK_Enrollment_ActiveTraining]
	FOREIGN KEY ([CourseID]) REFERENCES [ActiveTraining] ([TriningID]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Enrollment] ADD CONSTRAINT [FK_Enrollment_Employee_02]
	FOREIGN KEY ([EmployeeID]) REFERENCES [Employee] ([EmployeeID]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Enrollment] ADD CONSTRAINT [FK_Enrollment_Period_02]
	FOREIGN KEY ([PeriodID]) REFERENCES [Period] ([PeriodID]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [UserRole] ADD CONSTRAINT [FK_UserRole_Employee]
	FOREIGN KEY ([EmployeeID]) REFERENCES [Employee] ([EmployeeID]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [UserRole] ADD CONSTRAINT [FK_UserRole_Role]
	FOREIGN KEY ([RoleID]) REFERENCES [Role] ([RoleID]) ON DELETE No Action ON UPDATE No Action
GO
